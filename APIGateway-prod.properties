server.port=8000
app.prefix = /api/v1
eureka.client.serviceUrl.defaultZone=http://${DISCOVERY_HOST_IP}:${DISCOVERY_PORT}/eureka/

# config router service
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.routes[0].id=student-service
spring.cloud.gateway.routes[0].uri=lb://STUDENTSERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=${app.prefix}/students/**
spring.cloud.gateway.routes[0].filters[0]=AuthenticateFilter
spring.cloud.gateway.routes[0].filters[1]= StripPrefix=2

# config router auth service
spring.cloud.gateway.routes[1].id=auth-service
spring.cloud.gateway.routes[1].uri=lb://AuthenticateService
spring.cloud.gateway.routes[1].predicates[0]=Path=${app.prefix}/auth/**
spring.cloud.gateway.routes[1].filters[0]=AuthenticateFilter
spring.cloud.gateway.routes[1].filters[1]= StripPrefix=2

# config router Graduation service
spring.cloud.gateway.routes[2].id=graduation-service
spring.cloud.gateway.routes[2].uri=lb://GraduationService
spring.cloud.gateway.routes[2].predicates[0]=Path=${app.prefix}/graduation/**
spring.cloud.gateway.routes[2].filters[0]=AuthenticateFilter
spring.cloud.gateway.routes[2].filters[1]= StripPrefix=2

# config router Schedule service
spring.cloud.gateway.routes[3].id=schedule-service
spring.cloud.gateway.routes[3].uri=lb://ScheduleService
spring.cloud.gateway.routes[3].predicates[0]=Path=${app.prefix}/schedule/**
spring.cloud.gateway.routes[3].filters[0]=AuthenticateFilter
spring.cloud.gateway.routes[3].filters[1]= StripPrefix=2

# config router Class service
spring.cloud.gateway.routes[4].id=class-service
spring.cloud.gateway.routes[4].uri=lb://ClassService
spring.cloud.gateway.routes[4].predicates[0]=Path=${app.prefix}/class/**
spring.cloud.gateway.routes[4].filters[0]=AuthenticateFilter
spring.cloud.gateway.routes[4].filters[1]= StripPrefix=2

# config router Enrollments service
spring.cloud.gateway.routes[5].id=enrollments-service
spring.cloud.gateway.routes[5].uri=lb://EnrollmentService
spring.cloud.gateway.routes[5].predicates[0]=Path=${app.prefix}/enrollment/**
spring.cloud.gateway.routes[5].filters[0]=AuthenticateFilter
spring.cloud.gateway.routes[5].filters[1]= StripPrefix=2

# config router Learning Result Service
spring.cloud.gateway.routes[6].id=learning-result-service
spring.cloud.gateway.routes[6].uri=lb://LearningResultService
spring.cloud.gateway.routes[6].predicates[0]=Path=${app.prefix}/learning-result/**
spring.cloud.gateway.routes[6].filters[0]=AuthenticateFilter
spring.cloud.gateway.routes[6].filters[1]= StripPrefix=2

# config router Course Service
spring.cloud.gateway.routes[7].id=course-service
spring.cloud.gateway.routes[7].uri=lb://CourseService
spring.cloud.gateway.routes[7].predicates[0]=Path=${app.prefix}/course/**
spring.cloud.gateway.routes[7].filters[0]=AuthenticateFilter
spring.cloud.gateway.routes[7].filters[1]= StripPrefix=2


# default filter
# global cors
spring.cloud.gateway.globalcors.corsConfigurations[/api/v1/**].allowedOriginPatterns=*
spring.cloud.gateway.globalcors.corsConfigurations[/api/v1/**].allowedMethods=*
spring.cloud.gateway.globalcors.corsConfigurations[/api/v1/**].allowedHeaders=*
spring.cloud.gateway.globalcors.corsConfigurations[/api/v1/**].allowCredentials=true
spring.cloud.gateway.globalcors.corsConfigurations[/api/v1/**].maxAge=3600

# zipkin tracing
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://${ZIPKIN_HOST}:${ZIPKIN_PORT}/api/v2/spans





